{"ast":null,"code":"var _jsxFileName = \"/Users/amilmasic/Development/code/react/jbook/src/index.tsx\",\n    _s = $RefreshSig$();\n\nimport * as esbuild from 'esbuild-wasm';\nimport ReactDOM from 'react-dom';\nimport { useState, useEffect, useRef } from 'react';\nimport { unpkgPathPlugin } from './plugins/unpkg-path-plugin';\nimport { fetchPlugin } from './plugins/fetch-plugin';\nimport 'bulmaswatch/superhero/bulmaswatch.min.css';\nimport CodeEditor from './components/code-editor';\nimport Preview from './components/preview';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const ref = useRef();\n  const [code, setCode] = useState('');\n  const [input, setInput] = useState('');\n\n  const startService = async () => {\n    ref.current = await esbuild.startService({\n      worker: true,\n      wasmURL: 'https://unpkg.com/esbuild-wasm@0.8.27/esbuild.wasm'\n    });\n  };\n\n  useEffect(() => {\n    startService();\n  }, []);\n\n  const onClick = async () => {\n    if (!ref.current) {\n      return;\n    }\n\n    const result = await ref.current.build({\n      entryPoints: ['index.js'],\n      bundle: true,\n      write: false,\n      plugins: [unpkgPathPlugin(), fetchPlugin(input)],\n      define: {\n        'process.env.NODE_ENV': '\"production\"',\n        global: 'window'\n      }\n    });\n    setCode(result.outputFiles[0].text);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(CodeEditor, {\n      initialValue: \"const a = 1;\",\n      onChange: value => setInput(value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: input,\n      onChange: e => setInput(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClick,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Preview, {\n      code: code\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 11\n  }, this);\n};\n\n_s(App, \"84Tr3976SZhzZ97+2rA/cZCg7Cc=\");\n\n_c = App;\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 68,\n  columnNumber: 17\n}, this), document.querySelector('#root'));\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/amilmasic/Development/code/react/jbook/src/index.tsx"],"names":["esbuild","ReactDOM","useState","useEffect","useRef","unpkgPathPlugin","fetchPlugin","CodeEditor","Preview","App","ref","code","setCode","input","setInput","startService","current","worker","wasmURL","onClick","result","build","entryPoints","bundle","write","plugins","define","global","outputFiles","text","value","e","target","render","document","querySelector"],"mappings":";;;AAAA,OAAO,KAAKA,OAAZ,MAAyB,cAAzB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,MAA9B,QAA2C,OAA3C;AACA,SAASC,eAAT,QAAgC,6BAAhC;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,OAAO,2CAAP;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAMC,GAAG,GAAGN,MAAM,EAAlB;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC;;AAGA,QAAMa,YAAY,GAAG,YAAY;AAC/BL,IAAAA,GAAG,CAACM,OAAJ,GAAc,MAAMhB,OAAO,CAACe,YAAR,CAAqB;AACvCE,MAAAA,MAAM,EAAE,IAD+B;AAEvCC,MAAAA,OAAO,EAAE;AAF8B,KAArB,CAApB;AAID,GALD;;AAMAf,EAAAA,SAAS,CAAC,MAAK;AACbY,IAAAA,YAAY;AACb,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMI,OAAO,GAAG,YAAY;AAC1B,QAAI,CAACT,GAAG,CAACM,OAAT,EAAiB;AACf;AACD;;AAID,UAAMI,MAAM,GAAG,MAAMV,GAAG,CAACM,OAAJ,CAAYK,KAAZ,CAAkB;AACrCC,MAAAA,WAAW,EAAE,CAAC,UAAD,CADwB;AAErCC,MAAAA,MAAM,EAAE,IAF6B;AAGrCC,MAAAA,KAAK,EAAE,KAH8B;AAIrCC,MAAAA,OAAO,EAAE,CAACpB,eAAe,EAAhB,EAAoBC,WAAW,CAACO,KAAD,CAA/B,CAJ4B;AAKrCa,MAAAA,MAAM,EAAE;AACN,gCAAwB,cADlB;AAENC,QAAAA,MAAM,EAAE;AAFF;AAL6B,KAAlB,CAArB;AAWAf,IAAAA,OAAO,CAACQ,MAAM,CAACQ,WAAP,CAAmB,CAAnB,EAAsBC,IAAvB,CAAP;AAED,GApBD;;AAwBA,sBAAQ;AAAA,4BACA,QAAC,UAAD;AAAY,MAAA,YAAY,EAAC,cAAzB;AACE,MAAA,QAAQ,EAAGC,KAAD,IAAWhB,QAAQ,CAACgB,KAAD;AAD/B;AAAA;AAAA;AAAA;AAAA,YADA,eAIA;AACE,MAAA,KAAK,EAAEjB,KADT;AAEE,MAAA,QAAQ,EAAEkB,CAAC,IAAIjB,QAAQ,CAACiB,CAAC,CAACC,MAAF,CAASF,KAAV;AAFzB;AAAA;AAAA;AAAA;AAAA,YAJA,eAQA;AAAA,6BACE;AAAQ,QAAA,OAAO,EAAEX,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YARA,eAWA,QAAC,OAAD;AAAS,MAAA,IAAI,EAAER;AAAf;AAAA;AAAA;AAAA;AAAA,YAXA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AAcD,CAtDD;;GAAMF,G;;KAAAA,G;AA0DNR,QAAQ,CAACgC,MAAT,eAAgB,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,QAAhB,EAAyBC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAzB","sourcesContent":["import * as esbuild from 'esbuild-wasm';\nimport ReactDOM from 'react-dom';\nimport { useState, useEffect, useRef} from 'react';\nimport { unpkgPathPlugin } from './plugins/unpkg-path-plugin';\nimport { fetchPlugin } from './plugins/fetch-plugin';\nimport 'bulmaswatch/superhero/bulmaswatch.min.css';\nimport CodeEditor from './components/code-editor';\nimport Preview from './components/preview';\n\nconst App = () => {\n  const ref = useRef<any>();\n  const [code, setCode] = useState('');\n  const [input, setInput] = useState('');\n\n\n  const startService = async () => {\n    ref.current = await esbuild.startService({\n      worker: true,\n      wasmURL: 'https://unpkg.com/esbuild-wasm@0.8.27/esbuild.wasm'\n    });\n  };\n  useEffect(()=> {\n    startService();\n  }, []);\n\n  const onClick = async () => {\n    if (!ref.current){\n      return;\n    }\n\n\n\n    const result = await ref.current.build({\n      entryPoints: ['index.js'],\n      bundle: true,\n      write: false,\n      plugins: [unpkgPathPlugin(), fetchPlugin(input)],\n      define: {\n        'process.env.NODE_ENV': '\"production\"',\n        global: 'window'\n      },\n    })\n\n    setCode(result.outputFiles[0].text);\n\n  };\n\n\n\n  return (<div>\n          <CodeEditor initialValue=\"const a = 1;\"\n            onChange={(value) => setInput(value)}\n          />\n          <textarea\n            value={input}\n            onChange={e => setInput(e.target.value)}\n          ></textarea>\n          <div>\n            <button onClick={onClick}>Submit</button>\n          </div>\n          <Preview code={code}/>\n        </div>\n  );\n};\n\n\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"]},"metadata":{},"sourceType":"module"}