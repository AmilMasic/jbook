{"ast":null,"code":"var _jsxFileName = \"/Users/amilmasic/Development/code/react/jbook/src/components/resizable.tsx\",\n    _s = $RefreshSig$();\n\nimport { ResizableBox } from 'react-resizable';\nimport { useEffect, useState } from 'react';\nimport './resizable.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Resizable = ({\n  direction,\n  children\n}) => {\n  _s();\n\n  let resizableProps;\n  const [innerHeight, setInnerHeight] = useState(window.innerHeight);\n  const [innerWidth, setInnerWidth] = useState(window.innerWidth);\n  useEffect(() => {\n    const listener = () => {\n      setInnerHeight(window.innerHeight);\n      setInnerWidth(window.innerWidth);\n    };\n\n    window.addEventListener('resize', listener);\n    return () => {\n      window.removeEventListener('resize', listener);\n    };\n  }, []);\n\n  if (direction === 'horizontal') {\n    resizableProps = {\n      className: 'resize-horizontal',\n      minConstraints: [innerWidth * 0.2, Infinity],\n      maxConstraints: [innerWidth * 0.75, Infinity],\n      height: Infinity,\n      width: innerWidth * 0.75,\n      resizeHandles: ['e']\n    };\n  } else {\n    resizableProps = {\n      minConstraints: [Infinity, 24],\n      maxConstraints: [Infinity, innerHeight * 0.9],\n      height: 300,\n      width: Infinity,\n      resizeHandles: ['s']\n    };\n  }\n\n  return /*#__PURE__*/_jsxDEV(ResizableBox, { ...resizableProps,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Resizable, \"pP7Dsp6ebnNv2hiUMMicRYhA838=\");\n\n_c = Resizable;\nexport default Resizable;\n\nvar _c;\n\n$RefreshReg$(_c, \"Resizable\");","map":{"version":3,"sources":["/Users/amilmasic/Development/code/react/jbook/src/components/resizable.tsx"],"names":["ResizableBox","useEffect","useState","Resizable","direction","children","resizableProps","innerHeight","setInnerHeight","window","innerWidth","setInnerWidth","listener","addEventListener","removeEventListener","className","minConstraints","Infinity","maxConstraints","height","width","resizeHandles"],"mappings":";;;AAAA,SAASA,YAAT,QAAgD,iBAAhD;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAO,iBAAP;;;AAMA,MAAMC,SAAmC,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAA4B;AAAA;;AACtE,MAAIC,cAAJ;AAEA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAACO,MAAM,CAACF,WAAR,CAA9C;AACA,QAAM,CAACG,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAACO,MAAM,CAACC,UAAR,CAA5C;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMW,QAAQ,GAAG,MAAM;AACrBJ,MAAAA,cAAc,CAACC,MAAM,CAACF,WAAR,CAAd;AACAI,MAAAA,aAAa,CAACF,MAAM,CAACC,UAAR,CAAb;AACD,KAHD;;AAIAD,IAAAA,MAAM,CAACI,gBAAP,CAAwB,QAAxB,EAAkCD,QAAlC;AAEA,WAAO,MAAM;AACXH,MAAAA,MAAM,CAACK,mBAAP,CAA2B,QAA3B,EAAqCF,QAArC;AACD,KAFD;AAGD,GAVQ,EAUN,EAVM,CAAT;;AAYA,MAAIR,SAAS,KAAK,YAAlB,EAAgC;AAC9BE,IAAAA,cAAc,GAAG;AACfS,MAAAA,SAAS,EAAE,mBADI;AAEfC,MAAAA,cAAc,EAAE,CAACN,UAAU,GAAG,GAAd,EAAmBO,QAAnB,CAFD;AAGfC,MAAAA,cAAc,EAAE,CAACR,UAAU,GAAG,IAAd,EAAoBO,QAApB,CAHD;AAIfE,MAAAA,MAAM,EAAEF,QAJO;AAKfG,MAAAA,KAAK,EAAEV,UAAU,GAAG,IALL;AAMfW,MAAAA,aAAa,EAAC,CAAC,GAAD;AANC,KAAjB;AAQD,GATD,MASO;AACLf,IAAAA,cAAc,GAAG;AACfU,MAAAA,cAAc,EAAE,CAACC,QAAD,EAAW,EAAX,CADD;AAEfC,MAAAA,cAAc,EAAC,CAACD,QAAD,EAAWV,WAAW,GAAG,GAAzB,CAFA;AAGfY,MAAAA,MAAM,EAAC,GAHQ;AAIfC,MAAAA,KAAK,EAACH,QAJS;AAKfI,MAAAA,aAAa,EAAC,CAAC,GAAD;AALC,KAAjB;AAOD;;AAED,sBACE,QAAC,YAAD,OAAkBf,cAAlB;AAAA,cACGD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA1CD;;GAAMF,S;;KAAAA,S;AA4CN,eAAeA,SAAf","sourcesContent":["import { ResizableBox, ResizableBoxProps } from 'react-resizable';\nimport { useEffect, useState } from 'react';\nimport './resizable.css';\n\ninterface ResizableProps {\n  direction: 'horizontal' | 'vertical';\n}\n\nconst Resizable: React.FC<ResizableProps> = ({ direction, children}) => {\n  let resizableProps: ResizableBoxProps;\n\n  const [innerHeight, setInnerHeight] = useState(window.innerHeight);\n  const [innerWidth, setInnerWidth] = useState(window.innerWidth);\n\n  useEffect(() => {\n    const listener = () => {\n      setInnerHeight(window.innerHeight);\n      setInnerWidth(window.innerWidth);\n    };\n    window.addEventListener('resize', listener);\n\n    return () => {\n      window.removeEventListener('resize', listener);\n    };\n  }, []);\n\n  if (direction === 'horizontal') {\n    resizableProps = {\n      className: 'resize-horizontal',\n      minConstraints: [innerWidth * 0.2, Infinity],\n      maxConstraints: [innerWidth * 0.75, Infinity],\n      height: Infinity,\n      width: innerWidth * 0.75,\n      resizeHandles:['e'],\n    };\n  } else {\n    resizableProps = {\n      minConstraints: [Infinity, 24],\n      maxConstraints:[Infinity, innerHeight * 0.9],\n      height:300,\n      width:Infinity,\n      resizeHandles:['s'],\n    };\n  }\n\n  return (\n    <ResizableBox{ ...resizableProps}>\n      {children}\n    </ResizableBox>\n  );\n};\n\nexport default Resizable;\n"]},"metadata":{},"sourceType":"module"}