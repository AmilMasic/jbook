{"ast":null,"code":"var _jsxFileName = \"/Users/amilmasic/Development/code/react/jbook/src/components/code-editor.tsx\";\nimport MonacoEditor from '@monaco-editor/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CodeEditor = ({\n  onChange,\n  initialValue\n}) => {\n  const onEditorDidMount = (getValue, monacoEditor) => {\n    monacoEditor.onDidChangeModelContent(() => {\n      console.log(getValue);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(MonacoEditor, {\n    editorDidMount: onEditorDidMount,\n    value: initialValue,\n    theme: \"dark\",\n    language: \"javascript\",\n    height: \"500px\",\n    options: {\n      wordWrap: 'on',\n      minimap: {\n        enabled: false\n      },\n      showUnused: false,\n      folding: false,\n      lineNumbersMinChars: 3,\n      fontSize: 16,\n      scrollBeyondLastLine: false,\n      automaticLayout: true\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 10\n  }, this);\n};\n\n_c = CodeEditor;\nexport default CodeEditor;\n\nvar _c;\n\n$RefreshReg$(_c, \"CodeEditor\");","map":{"version":3,"sources":["/Users/amilmasic/Development/code/react/jbook/src/components/code-editor.tsx"],"names":["MonacoEditor","CodeEditor","onChange","initialValue","onEditorDidMount","getValue","monacoEditor","onDidChangeModelContent","console","log","wordWrap","minimap","enabled","showUnused","folding","lineNumbersMinChars","fontSize","scrollBeyondLastLine","automaticLayout"],"mappings":";AAAA,OAAOA,YAAP,MAAyB,sBAAzB;;;AAMA,MAAMC,UAAqC,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAAgC;AAC5E,QAAMC,gBAAgB,GAAG,CAACC,QAAD,EAAyBC,YAAzB,KAA+C;AACtEA,IAAAA,YAAY,CAACC,uBAAb,CAAqC,MAAM;AACzCC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACD,KAFD;AAID,GALD;;AAOA,sBAAO,QAAC,YAAD;AACL,IAAA,cAAc,EAAED,gBADX;AAEL,IAAA,KAAK,EAAED,YAFF;AAGL,IAAA,KAAK,EAAC,MAHD;AAIL,IAAA,QAAQ,EAAC,YAJJ;AAKL,IAAA,MAAM,EAAC,OALF;AAML,IAAA,OAAO,EAAE;AACPO,MAAAA,QAAQ,EAAE,IADH;AAEPC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAFF;AAGPC,MAAAA,UAAU,EAAE,KAHL;AAIPC,MAAAA,OAAO,EAAE,KAJF;AAKPC,MAAAA,mBAAmB,EAAE,CALd;AAMPC,MAAAA,QAAQ,EAAE,EANH;AAOPC,MAAAA,oBAAoB,EAAE,KAPf;AAQPC,MAAAA,eAAe,EAAE;AARV;AANJ;AAAA;AAAA;AAAA;AAAA,UAAP;AAiBD,CAzBD;;KAAMjB,U;AA2BN,eAAeA,UAAf","sourcesContent":["import MonacoEditor from '@monaco-editor/react';\n\ninterface CodeEditorProps {\n  initialValue: string;\n  onChange(value: string): void;\n}\nconst CodeEditor: React.FC<CodeEditorProps> = ({ onChange, initialValue }) => {\n  const onEditorDidMount = (getValue: () => string, monacoEditor: any) => {\n    monacoEditor.onDidChangeModelContent(() => {\n      console.log(getValue);\n    })\n\n  }\n\n  return <MonacoEditor\n    editorDidMount={onEditorDidMount}\n    value={initialValue}\n    theme=\"dark\"\n    language=\"javascript\"\n    height=\"500px\"\n    options={{\n      wordWrap: 'on',\n      minimap: { enabled: false },\n      showUnused: false,\n      folding: false,\n      lineNumbersMinChars: 3,\n      fontSize: 16,\n      scrollBeyondLastLine: false,\n      automaticLayout: true,\n    }}\n   />\n};\n\nexport default CodeEditor;\n"]},"metadata":{},"sourceType":"module"}