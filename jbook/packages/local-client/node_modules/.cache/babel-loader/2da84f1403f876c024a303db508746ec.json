{"ast":null,"code":"var _jsxFileName = \"/Users/amilmasic/Development/code/react/jbook/jbook/packages/local-client/src/components/cell-list-item.tsx\";\nimport './cell-list-item.css';\nimport ActionBar from './action-bar';\nimport CodeCell from './code-cell';\nimport TextEditor from './text-editor';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CellListItem = ({\n  cell\n}) => {\n  let child;\n\n  if (cell.type === 'code') {\n    child = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"action-bar-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(ActionBar, {\n          id: cell.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(CodeCell, {\n        cell: cell\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true);\n  } else {\n    child = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(TextEditor, {\n        cell: cell\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ActionBar, {\n        id: cell.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cell-list-item\",\n    children: child\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_c = CellListItem;\nexport default CellListItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"CellListItem\");","map":{"version":3,"sources":["/Users/amilmasic/Development/code/react/jbook/jbook/packages/local-client/src/components/cell-list-item.tsx"],"names":["ActionBar","CodeCell","TextEditor","CellListItem","cell","child","type","id"],"mappings":";AAAA,OAAO,sBAAP;AACA,OAAOA,SAAP,MAAsB,cAAtB;AAEA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,UAAP,MAAuB,eAAvB;;;;AAKA,MAAMC,YAAyC,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC9D,MAAIC,KAAJ;;AACA,MAAID,IAAI,CAACE,IAAL,KAAc,MAAlB,EAA0B;AACxBD,IAAAA,KAAK,gBAAG;AAAA,8BACN;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,+BACE,QAAC,SAAD;AAAW,UAAA,EAAE,EAAED,IAAI,CAACG;AAApB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADM,eAIN,QAAC,QAAD;AAAU,QAAA,IAAI,EAAEH;AAAhB;AAAA;AAAA;AAAA;AAAA,cAJM;AAAA,oBAAR;AAMD,GAPD,MAOO;AACLC,IAAAA,KAAK,gBAAG;AAAA,8BACJ,QAAC,UAAD;AAAY,QAAA,IAAI,EAAED;AAAlB;AAAA;AAAA;AAAA;AAAA,cADI,eAEJ,QAAC,SAAD;AAAW,QAAA,EAAE,EAAEA,IAAI,CAACG;AAApB;AAAA;AAAA;AAAA;AAAA,cAFI;AAAA,oBAAR;AAID;;AACD,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,cACGF;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CArBD;;KAAMF,Y;AAuBN,eAAeA,YAAf","sourcesContent":["import './cell-list-item.css';\nimport ActionBar from './action-bar';\nimport { Cell } from '../state';\nimport CodeCell from './code-cell';\nimport TextEditor from './text-editor';\n\ninterface CellListItemProps {\n  cell: Cell\n}\nconst CellListItem: React.FC<CellListItemProps> = ({ cell }) => {\n  let child: JSX.Element;\n  if (cell.type === 'code') {\n    child = <>\n      <div className=\"action-bar-wrapper\">\n        <ActionBar id={cell.id}/>\n      </div>\n      <CodeCell cell={cell} />\n      </>\n  } else {\n    child = <>\n        <TextEditor cell={cell} />\n        <ActionBar id={cell.id}/>\n      </>\n  }\n  return (\n    <div className=\"cell-list-item\">\n      {child}\n\n    </div>\n  );\n};\n\nexport default CellListItem;\n"]},"metadata":{},"sourceType":"module"}