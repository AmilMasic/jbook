{"ast":null,"code":"var _jsxFileName = \"/Users/amilmasic/Development/code/react/jbook/src/index.tsx\",\n    _s = $RefreshSig$();\n\nimport * as esbuild from 'esbuild-wasm';\nimport ReactDOM from 'react-dom';\nimport { useState, useEffect, useRef } from 'react';\nimport { unpkgPathPlugin } from './plugins/unpkg-path-plugin';\nimport { fetchPlugin } from './plugins/fetch-plugin';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const ref = useRef();\n  const iframe = useRef();\n  const [input, setInput] = useState('');\n  const [code, setCode] = useState('');\n\n  const startService = async () => {\n    ref.current = await esbuild.startService({\n      worker: true,\n      wasmURL: 'https://unpkg.com/esbuild-wasm@0.8.27/esbuild.wasm'\n    });\n  };\n\n  useEffect(() => {\n    startService();\n  }, []);\n\n  const onClick = async () => {\n    if (!ref.current) {\n      return;\n    }\n\n    const result = await ref.current.build({\n      entryPoints: ['index.js'],\n      bundle: true,\n      write: false,\n      plugins: [unpkgPathPlugin(), fetchPlugin(input)],\n      define: {\n        'process.env.NODE_ENV': '\"production\"',\n        global: 'window'\n      }\n    }); // setCode(result.outputFiles[0].text);\n\n    iframe.current.contentWindow.postMessage(result.outputFiles[0].text, '*');\n  };\n\n  const html = `\n    <html>\n      <head></head>\n\n      <body>\n        <div id=\"root\"></div>\n        <script>\n          window.addEventListener('message', (event) => {\n            try {\n              eval(event.data);\n            } catch (err){\n              const root = document.querySelector('#root');\n              root.innerHTML = '<div>' + err + '</div>'\n            }\n          }, false);\n        </script>\n      </body>\n\n    </html>\n  `;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: input,\n      onChange: e => setInput(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClick,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: code\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n      ref: iframe,\n      sandbox: \"allow-scripts\",\n      srcDoc: html\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 11\n  }, this);\n};\n\n_s(App, \"xfK7gAdNKO4OGY66u/3/OHSbeOc=\");\n\n_c = App;\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 80,\n  columnNumber: 17\n}, this), document.querySelector('#root'));\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/amilmasic/Development/code/react/jbook/src/index.tsx"],"names":["esbuild","ReactDOM","useState","useEffect","useRef","unpkgPathPlugin","fetchPlugin","App","ref","iframe","input","setInput","code","setCode","startService","current","worker","wasmURL","onClick","result","build","entryPoints","bundle","write","plugins","define","global","contentWindow","postMessage","outputFiles","text","html","e","target","value","render","document","querySelector"],"mappings":";;;AAAA,OAAO,KAAKA,OAAZ,MAAyB,cAAzB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,MAA9B,QAA2C,OAA3C;AACA,SAASC,eAAT,QAAgC,6BAAhC;AACA,SAASC,WAAT,QAA4B,wBAA5B;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAMC,GAAG,GAAGJ,MAAM,EAAlB;AACA,QAAMK,MAAM,GAAGL,MAAM,EAArB;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMY,YAAY,GAAG,YAAY;AAC/BN,IAAAA,GAAG,CAACO,OAAJ,GAAc,MAAMf,OAAO,CAACc,YAAR,CAAqB;AACvCE,MAAAA,MAAM,EAAE,IAD+B;AAEvCC,MAAAA,OAAO,EAAE;AAF8B,KAArB,CAApB;AAID,GALD;;AAMAd,EAAAA,SAAS,CAAC,MAAK;AACbW,IAAAA,YAAY;AACb,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMI,OAAO,GAAG,YAAY;AAC1B,QAAI,CAACV,GAAG,CAACO,OAAT,EAAiB;AACf;AACD;;AAED,UAAMI,MAAM,GAAG,MAAMX,GAAG,CAACO,OAAJ,CAAYK,KAAZ,CAAkB;AACrCC,MAAAA,WAAW,EAAE,CAAC,UAAD,CADwB;AAErCC,MAAAA,MAAM,EAAE,IAF6B;AAGrCC,MAAAA,KAAK,EAAE,KAH8B;AAIrCC,MAAAA,OAAO,EAAE,CAACnB,eAAe,EAAhB,EAAoBC,WAAW,CAACI,KAAD,CAA/B,CAJ4B;AAKrCe,MAAAA,MAAM,EAAE;AACN,gCAAwB,cADlB;AAENC,QAAAA,MAAM,EAAE;AAFF;AAL6B,KAAlB,CAArB,CAL0B,CAgB1B;;AACAjB,IAAAA,MAAM,CAACM,OAAP,CAAeY,aAAf,CAA6BC,WAA7B,CAAyCT,MAAM,CAACU,WAAP,CAAmB,CAAnB,EAAsBC,IAA/D,EAAqE,GAArE;AACD,GAlBD;;AAoBA,QAAMC,IAAI,GAAI;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAnBE;AAqBA,sBAAQ;AAAA,4BACA;AACE,MAAA,KAAK,EAAErB,KADT;AAEE,MAAA,QAAQ,EAAEsB,CAAC,IAAIrB,QAAQ,CAACqB,CAAC,CAACC,MAAF,CAASC,KAAV;AAFzB;AAAA;AAAA;AAAA;AAAA,YADA,eAKA;AAAA,6BACE;AAAQ,QAAA,OAAO,EAAEhB,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YALA,eAQA;AAAA,gBAAMN;AAAN;AAAA;AAAA;AAAA;AAAA,YARA,eASA;AAAQ,MAAA,GAAG,EAAEH,MAAb;AAAqB,MAAA,OAAO,EAAC,eAA7B;AAA6C,MAAA,MAAM,EAAEsB;AAArD;AAAA;AAAA;AAAA;AAAA,YATA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AAYD,CArED;;GAAMxB,G;;KAAAA,G;AAyENN,QAAQ,CAACkC,MAAT,eAAgB,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,QAAhB,EAAyBC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAzB","sourcesContent":["import * as esbuild from 'esbuild-wasm';\nimport ReactDOM from 'react-dom';\nimport { useState, useEffect, useRef} from 'react';\nimport { unpkgPathPlugin } from './plugins/unpkg-path-plugin';\nimport { fetchPlugin } from './plugins/fetch-plugin';\n\nconst App = () => {\n  const ref = useRef<any>();\n  const iframe = useRef<any>();\n  const [input, setInput] = useState('');\n  const [code, setCode] = useState('');\n\n  const startService = async () => {\n    ref.current = await esbuild.startService({\n      worker: true,\n      wasmURL: 'https://unpkg.com/esbuild-wasm@0.8.27/esbuild.wasm'\n    });\n  };\n  useEffect(()=> {\n    startService();\n  }, []);\n\n  const onClick = async () => {\n    if (!ref.current){\n      return;\n    }\n\n    const result = await ref.current.build({\n      entryPoints: ['index.js'],\n      bundle: true,\n      write: false,\n      plugins: [unpkgPathPlugin(), fetchPlugin(input)],\n      define: {\n        'process.env.NODE_ENV': '\"production\"',\n        global: 'window'\n      },\n    })\n\n    // setCode(result.outputFiles[0].text);\n    iframe.current.contentWindow.postMessage(result.outputFiles[0].text, '*');\n  };\n\n  const html = `\n    <html>\n      <head></head>\n\n      <body>\n        <div id=\"root\"></div>\n        <script>\n          window.addEventListener('message', (event) => {\n            try {\n              eval(event.data);\n            } catch (err){\n              const root = document.querySelector('#root');\n              root.innerHTML = '<div>' + err + '</div>'\n            }\n          }, false);\n        </script>\n      </body>\n\n    </html>\n  `;\n\n  return (<div>\n          <textarea\n            value={input}\n            onChange={e => setInput(e.target.value)}\n          ></textarea>\n          <div>\n            <button onClick={onClick}>Submit</button>\n          </div>\n          <pre>{code}</pre>\n          <iframe ref={iframe} sandbox=\"allow-scripts\" srcDoc={html} />\n        </div>\n  );\n};\n\n\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"]},"metadata":{},"sourceType":"module"}